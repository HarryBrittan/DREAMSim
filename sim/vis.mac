#$$$ jobName    Dream
#$$$ runNumber  04
#$$$ runSeq     00
#$$$ runConfig    Test    (string camera number and (rock,air, air) in (cairn, chamber, passage)
#$$$ numberOfEvents   1
#$$$ eventsInNtupe     5     (maximum number of events in ntuple output file)

#$$$ rootPre       mc      (file name will be Pre+runName+runNumber+runSeq+runConfig+NoE.root)
#$$$ createNtuple  true    (true or false))
#$$$ miniNtuple    ture    (true of false, true to drop some objects to minimize Ntuple.)
#$$$ saveTruthHits true    (true or false)


#$$$ gun_particle     pi+      (pi+ mu+ e+ etc)
#$$$ gun_energy_min   100.0     (GeV)
#$$$ gun_energy_max   100.0    (GeV)
#$$$ gun_x_min         2.50     (cm)   2.5 =/- 0.5 cm
#$$$ gun_x_max         2.50     (cm)
#$$$ gun_y_min        -2.50     (cm)   -2.5 +/- 0.5 cm
#$$$ gun_y_max        -2.50     (cm)
#$$$ gun_z_min        -150.0     (cm)
#$$$ gun_z_max        -150.0     (cm)


#$$$ csvHits2dSC       0  (number of events to save 2D hits in a csv file)
#$$$ csvHits2dCH       0
#$$$ csvHits3dCH       0     (number of events to save 3D hits in a csv file)

#$$$ sipmType   1    (1= J 6 mm 6.0V, 2= J 6 mm 2.5V)

#$$$ gridSizeX        3      (grid count) - value hard coded in CaloID for now
#$$$ gridSizeY        4      (grid count) - value hard coded in CaloID for now
#$$$ gridSizeT       50.0    (pico sec)   - value hard coded in CaloID for now
#$$$ caloRotationX    2.0      (degree)   def 2.0
#$$$ caloRotationY    2.0      (degree)   def 2.0
#$$$ calibSen        1.766   (edep in MeV for 100 GeV e+, 2 deg)  with 0.0001 MeV cut
#$$$ calibCen        2.764   (edep in MeV for 100 GeV e+, 2 deg)  
#$$$ calibCph        4659.  (number of chrenkov photons for 100 GeV e+, 2 deg)
#$$$ calibSph        1.766   (edep for 100 GeV e+, 2 deg) with 0.0001 MeV cut 

# Macro file for the visualization setting for the initialization phase 
# of the B4 example when running in interactive mode
#

# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create an OpenInventor view:
#/vis/open OIX
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 90. 180.
#
# Specify zoom value:
#/vis/viewer/zoom 2.
#
# Specify style (surface, wireframe, auxiliary edges,...)
#/vis/viewer/set/style wireframe
#/vis/viewer/set/auxiliaryEdge true
#/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw coordinate axes:
# /vis/scene/add/axes 0 0 0 5 cm
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
#/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh false
/vis/verbose warnings
/vis/viewer/set/spin 0
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
